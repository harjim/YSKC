// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RSDB;

namespace RSDB.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201202022901_addP_docFileMonthCol")]
    partial class addP_docFileMonthCol
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RSDB.Models.accountTitle", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("accountName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("accountNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("accoutType");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("fullAccountName")
                        .HasMaxLength(200);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("level");

                    b.Property<int>("parentId");

                    b.HasKey("id");

                    b.ToTable("accountTitle");
                });

            modelBuilder.Entity("RSDB.Models.app_company_role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("roleId");

                    b.HasKey("id");

                    b.ToTable("app_company_role");
                });

            modelBuilder.Entity("RSDB.Models.app_manager_role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msUserId");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<int>("roleId");

                    b.HasKey("id");

                    b.ToTable("app_manager_role");
                });

            modelBuilder.Entity("RSDB.Models.app_manager_user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int?>("msDeptId");

                    b.Property<int>("msUserId");

                    b.Property<string>("realName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("app_manager_user");
                });

            modelBuilder.Entity("RSDB.Models.app_menu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("fullPath")
                        .HasMaxLength(300);

                    b.Property<bool>("hasYearSelect");

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<byte>("level");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("parentId");

                    b.Property<string>("perms")
                        .HasMaxLength(200);

                    b.Property<string>("remark")
                        .HasMaxLength(300);

                    b.Property<byte>("seq");

                    b.Property<byte>("status");

                    b.Property<byte>("type");

                    b.Property<string>("url")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("app_menu");
                });

            modelBuilder.Entity("RSDB.Models.app_role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("mType");

                    b.Property<int?>("productType");

                    b.Property<string>("remark")
                        .HasMaxLength(100);

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("app_role");
                });

            modelBuilder.Entity("RSDB.Models.app_role_menu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("menuId");

                    b.Property<int>("roleId");

                    b.HasKey("id");

                    b.ToTable("app_role_menu");
                });

            modelBuilder.Entity("RSDB.Models.app_user_role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("roleId");

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.ToTable("app_user_role");
                });

            modelBuilder.Entity("RSDB.Models.c_activity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("pKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("pValue")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("c_activity");
                });

            modelBuilder.Entity("RSDB.Models.c_annualReport", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("filePath")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("reportName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("type");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("c_annualReport");
                });

            modelBuilder.Entity("RSDB.Models.c_attendance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("deptName")
                        .HasMaxLength(100);

                    b.Property<string>("ename")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("enumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<TimeSpan?>("offTime1");

                    b.Property<TimeSpan?>("offTime2");

                    b.Property<TimeSpan?>("offTime3");

                    b.Property<TimeSpan>("onTime1");

                    b.Property<TimeSpan?>("onTime2");

                    b.Property<TimeSpan?>("onTime3");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<DateTime>("workDate");

                    b.Property<decimal?>("workHour")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("companyId", "enumber", "workDate")
                        .IsUnique();

                    b.ToTable("c_attendance");
                });

            modelBuilder.Entity("RSDB.Models.c_cost", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<decimal>("rdFunds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("rdType");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("c_cost");
                });

            modelBuilder.Entity("RSDB.Models.c_financialCondition", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("addedOfIndustrial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("assetLiabilityRatio")
                        .HasColumnType("decimal(6,2)");

                    b.Property<decimal>("businessIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("companyId");

                    b.Property<decimal>("corporateIncomeTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<decimal>("dueLoanOfGovernment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("fixedAssetsOfInvestment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("grossOfIndustrial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<decimal>("loanAmountOfGovernment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("mainBusinessIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<decimal>("netAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("netCashFlowOfOperating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("netProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("netTotalCashFlow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totalAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totalExpenditureOfRD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totalFixedAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totalProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totalTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("c_financialCondition");
                });

            modelBuilder.Entity("RSDB.Models.c_ownership", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("capitalContribution")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("companyId");

                    b.Property<string>("contributionType")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<decimal>("proportion")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("shareholder")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("c_ownership");
                });

            modelBuilder.Entity("RSDB.Models.c_support", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("checkResult")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("checkTime");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("endTime");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("projectName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<DateTime>("startTime");

                    b.Property<decimal>("supportAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("supportDeptName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("supportTime")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("syear");

                    b.HasKey("id");

                    b.ToTable("c_support");
                });

            modelBuilder.Entity("RSDB.Models.company", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("accountSystem")
                        .HasMaxLength(20);

                    b.Property<string>("addressCode")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("businessLicense")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<int?>("capital");

                    b.Property<string>("capitalUnit")
                        .HasMaxLength(50);

                    b.Property<string>("companyAddress")
                        .HasMaxLength(100);

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("creditCode")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("depts");

                    b.Property<string>("domain")
                        .HasMaxLength(100);

                    b.Property<string>("email")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("firstDevFee");

                    b.Property<byte>("from");

                    b.Property<bool>("hasDevAccount");

                    b.Property<bool>("highTec");

                    b.Property<string>("highTecIndustry")
                        .HasMaxLength(20);

                    b.Property<string>("industryCode")
                        .HasMaxLength(30);

                    b.Property<string>("invoiceTitle")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("linkMan")
                        .HasMaxLength(20);

                    b.Property<string>("linkTel")
                        .HasMaxLength(20);

                    b.Property<string>("logo")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("mainIndustry")
                        .HasMaxLength(10);

                    b.Property<int>("members");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("owner")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("realTaxAuthorities")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("registerTime");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<byte>("status");

                    b.Property<string>("synopsis")
                        .HasMaxLength(800);

                    b.Property<string>("taxAuthorities")
                        .HasMaxLength(30);

                    b.Property<string>("taxpayerId")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("techIntro")
                        .HasMaxLength(1000);

                    b.HasKey("id");

                    b.ToTable("company");
                });

            modelBuilder.Entity("RSDB.Models.d_attendance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("attData")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("ename")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("enumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("remainAttData")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(120)
                        .HasDefaultValue("0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("d_attendance");
                });

            modelBuilder.Entity("RSDB.Models.d_bonus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("accountTitleId");

                    b.Property<int>("beginDay");

                    b.Property<decimal>("bonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("deptName")
                        .HasMaxLength(100);

                    b.Property<string>("ename")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("endDay");

                    b.Property<DateTime>("endTime");

                    b.Property<string>("enumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<bool>("isUsed");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<DateTime>("startTime");

                    b.Property<decimal>("totalBonus")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("companyId", "enumber", "month")
                        .IsUnique();

                    b.ToTable("d_bonus");
                });

            modelBuilder.Entity("RSDB.Models.d_design", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("accountTitleId");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<decimal>("dFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("deptId");

                    b.Property<string>("deptName")
                        .HasMaxLength(100);

                    b.Property<DateTime>("designDate");

                    b.Property<string>("dname")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int?>("rdDeptId");

                    b.Property<decimal>("remainDFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("d_design");
                });

            modelBuilder.Entity("RSDB.Models.d_energy", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("accNumber")
                        .HasMaxLength(100);

                    b.Property<int>("accountTitleId");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("deptId");

                    b.Property<string>("deptName")
                        .HasMaxLength(100);

                    b.Property<string>("ename")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<DateTime>("occDate");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("rdDeptId");

                    b.Property<decimal>("remainAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<decimal>("totalAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("type");

                    b.Property<string>("unit")
                        .HasMaxLength(10);

                    b.Property<decimal>("unitPrice")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("id");

                    b.ToTable("d_energy");
                });

            modelBuilder.Entity("RSDB.Models.d_equipment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("accountTitleId");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<decimal>("depreciation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("deptName")
                        .HasMaxLength(100);

                    b.Property<string>("ecode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ename")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("equData")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("remainEquData")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(120)
                        .HasDefaultValue("0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<decimal>("workHours")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("ecode", "month", "companyId")
                        .IsUnique();

                    b.ToTable("d_equipment");
                });

            modelBuilder.Entity("RSDB.Models.d_inspection", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("accDate");

                    b.Property<string>("accNumber")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("accountTitleId");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("deptId");

                    b.Property<string>("deptName")
                        .HasMaxLength(100);

                    b.Property<string>("enumber")
                        .HasMaxLength(30);

                    b.Property<decimal>("expense")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int?>("rdDeptId");

                    b.Property<decimal>("remainExpense")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("summary")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("d_inspection");
                });

            modelBuilder.Entity("RSDB.Models.d_material", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("accNumber")
                        .HasMaxLength(100);

                    b.Property<int>("accountTitleId");

                    b.Property<DateTime>("acqDate");

                    b.Property<string>("auditor")
                        .HasMaxLength(30);

                    b.Property<string>("billNo")
                        .HasMaxLength(100);

                    b.Property<string>("biller")
                        .HasMaxLength(30);

                    b.Property<string>("booker")
                        .HasMaxLength(30);

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("deptId");

                    b.Property<string>("deptName")
                        .HasMaxLength(100);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("mcode")
                        .HasMaxLength(50);

                    b.Property<string>("mname")
                        .HasMaxLength(200);

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("picker")
                        .HasMaxLength(30);

                    b.Property<string>("purpose")
                        .HasMaxLength(200);

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("rdDeptId");

                    b.Property<decimal>("remainQuantity")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("specification")
                        .HasMaxLength(200);

                    b.Property<decimal>("totalAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("type");

                    b.Property<string>("unit")
                        .HasMaxLength(10);

                    b.Property<decimal>("unitPrice")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("warehouse")
                        .HasMaxLength(30);

                    b.HasKey("id");

                    b.ToTable("d_material");
                });

            modelBuilder.Entity("RSDB.Models.d_salary", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("accountTitleId");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("dayHours");

                    b.Property<string>("deptName")
                        .HasMaxLength(100);

                    b.Property<string>("ename")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<decimal>("endowment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("endowmentOfCom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("enumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<decimal>("house")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("houseOfCom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("injury")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("injuryOfCom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("insuranceDetail")
                        .HasMaxLength(2000);

                    b.Property<decimal>("insuranceFund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<decimal>("maternity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("maternityOfCom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("medical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("medicalOfCom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<decimal>("pay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("payDetail")
                        .HasMaxLength(2000);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<decimal>("unemployment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("unemploymentOfCom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("workDays")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("workHours")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("d_salary");
                });

            modelBuilder.Entity("RSDB.Models.d_voucher", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("summary")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("voucherDate");

                    b.Property<string>("voucherNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("d_voucher");
                });

            modelBuilder.Entity("RSDB.Models.dept", b =>
                {
                    b.Property<short>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("deptName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("fullPath")
                        .HasMaxLength(300);

                    b.Property<string>("identity")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("level");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<short>("parentId");

                    b.Property<string>("remark")
                        .HasMaxLength(300);

                    b.HasKey("id");

                    b.ToTable("dept");
                });

            modelBuilder.Entity("RSDB.Models.docFile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<string>("docName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("enabled");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<bool>("multiple");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<bool>("required");

                    b.Property<int>("seq");

                    b.Property<string>("stages")
                        .HasMaxLength(32);

                    b.Property<string>("templateName")
                        .HasMaxLength(30);

                    b.Property<string>("templatePath")
                        .HasMaxLength(30);

                    b.HasKey("id");

                    b.ToTable("docFile");
                });

            modelBuilder.Entity("RSDB.Models.docFileItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("docFileId");

                    b.Property<string>("itemKey")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("itemMode");

                    b.Property<string>("itemTitle")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("itemType");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<bool>("required");

                    b.HasKey("id");

                    b.ToTable("docFileItem");
                });

            modelBuilder.Entity("RSDB.Models.docFileTemplate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<bool>("defaultTemplate");

                    b.Property<int>("docFileId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("templateName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("titleData")
                        .IsRequired()
                        .HasMaxLength(3000);

                    b.HasKey("id");

                    b.ToTable("docFileTemplate");
                });

            modelBuilder.Entity("RSDB.Models.docProcess", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("lastMsUpdatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("msCreatorId");

                    b.Property<string>("processName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("remark")
                        .HasMaxLength(100);

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("docProcess");
                });

            modelBuilder.Entity("RSDB.Models.docProcessTemplate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("enabled");

                    b.Property<bool>("multiple");

                    b.Property<bool>("optional");

                    b.Property<int>("processId");

                    b.Property<int>("seq");

                    b.Property<int>("templateId");

                    b.HasKey("id");

                    b.ToTable("docProcessTemplate");
                });

            modelBuilder.Entity("RSDB.Models.docTemplate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("createTime");

                    b.Property<string>("docName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("lastMsUpdatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("msCreatorId");

                    b.Property<string>("templateName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("templatePath")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("version")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("id");

                    b.ToTable("docTemplate");
                });

            modelBuilder.Entity("RSDB.Models.e_award", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("awardName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("awardProject")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("eUserId");

                    b.Property<DateTime>("grantDate");

                    b.Property<string>("grantDept")
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("ranking")
                        .HasMaxLength(50);

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("e_award");
                });

            modelBuilder.Entity("RSDB.Models.e_bank_info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("accountName")
                        .HasMaxLength(50);

                    b.Property<string>("bankAccount")
                        .HasMaxLength(50);

                    b.Property<string>("bankName")
                        .HasMaxLength(100);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("diplomaPath")
                        .HasMaxLength(100);

                    b.Property<int>("eUserId");

                    b.Property<string>("idBack")
                        .HasMaxLength(100);

                    b.Property<string>("idFront")
                        .HasMaxLength(100);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("positionPath")
                        .HasMaxLength(100);

                    b.Property<string>("postCode")
                        .HasMaxLength(10);

                    b.Property<string>("remitAddress")
                        .HasMaxLength(200);

                    b.Property<string>("titlePath")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("e_bank_info");
                });

            modelBuilder.Entity("RSDB.Models.e_book", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("author")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("authorOrder");

                    b.Property<string>("bookName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bookType")
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("eUserId");

                    b.Property<DateTime>("issueDate");

                    b.Property<string>("issueUnit")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.HasKey("id");

                    b.ToTable("e_book");
                });

            modelBuilder.Entity("RSDB.Models.e_extra", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("academicContent")
                        .HasMaxLength(200);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("eUserId");

                    b.Property<string>("highestReward")
                        .HasMaxLength(50);

                    b.Property<string>("homePage")
                        .HasMaxLength(100);

                    b.Property<string>("keyWord")
                        .HasMaxLength(200);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("otherGNVQsPath")
                        .HasMaxLength(100);

                    b.Property<string>("otherPath")
                        .HasMaxLength(200);

                    b.Property<string>("overseaContent")
                        .HasMaxLength(200);

                    b.Property<bool?>("overseaExp");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("socialAppointments")
                        .HasMaxLength(200);

                    b.Property<string>("specialBenefit")
                        .HasMaxLength(200);

                    b.Property<string>("workExp")
                        .HasMaxLength(200);

                    b.Property<string>("workResult")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("e_extra");
                });

            modelBuilder.Entity("RSDB.Models.e_intellectual_property", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("appNo")
                        .HasMaxLength(30);

                    b.Property<string>("certificateNo")
                        .HasMaxLength(30);

                    b.Property<int>("country");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("eUserId");

                    b.Property<string>("grantNo")
                        .HasMaxLength(30);

                    b.Property<string>("issueUnit")
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int?>("patentType");

                    b.Property<string>("pname")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("transform");

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("e_intellectual_property");
                });

            modelBuilder.Entity("RSDB.Models.e_paper", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("dataIncluded")
                        .HasMaxLength(100);

                    b.Property<int>("eUserId");

                    b.Property<string>("heading")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("includedCnt");

                    b.Property<DateTime>("issueDate");

                    b.Property<string>("journalName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.HasKey("id");

                    b.ToTable("e_paper");
                });

            modelBuilder.Entity("RSDB.Models.e_user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("birthday");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("eType");

                    b.Property<string>("email")
                        .HasMaxLength(50);

                    b.Property<int>("gender");

                    b.Property<string>("idNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("idType");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("logoPath")
                        .HasMaxLength(100);

                    b.Property<string>("mobilePhone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("realName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("e_user");
                });

            modelBuilder.Entity("RSDB.Models.e_user_info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("booming")
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("degree");

                    b.Property<string>("degreeSchool")
                        .HasMaxLength(50);

                    b.Property<string>("deptName")
                        .HasMaxLength(50);

                    b.Property<string>("doctorLevel")
                        .HasMaxLength(50);

                    b.Property<int>("eUserId");

                    b.Property<int?>("eduLevel");

                    b.Property<string>("fax")
                        .HasMaxLength(50);

                    b.Property<string>("firstSubject")
                        .HasMaxLength(50);

                    b.Property<string>("govReviewName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("graduatedDate");

                    b.Property<string>("graduatedSchool")
                        .HasMaxLength(50);

                    b.Property<string>("homeTel")
                        .HasMaxLength(30);

                    b.Property<string>("industryType")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<bool>("isGovReview");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("major")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("nameEnglish")
                        .HasMaxLength(30);

                    b.Property<string>("nation")
                        .HasMaxLength(10);

                    b.Property<string>("officeTel")
                        .HasMaxLength(30);

                    b.Property<string>("other")
                        .HasMaxLength(2000);

                    b.Property<string>("otherNVQ")
                        .HasMaxLength(100);

                    b.Property<string>("position")
                        .HasMaxLength(50);

                    b.Property<string>("postCode")
                        .HasMaxLength(10);

                    b.Property<string>("secondSubject")
                        .HasMaxLength(50);

                    b.Property<string>("thirdSubject")
                        .HasMaxLength(50);

                    b.Property<string>("tradition")
                        .HasMaxLength(50);

                    b.Property<string>("unitName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("unitType");

                    b.Property<string>("workCity")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("workType")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("e_user_info");
                });

            modelBuilder.Entity("RSDB.Models.employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("birthday");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("deptId");

                    b.Property<string>("deptName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("edate");

                    b.Property<int>("eduLevel");

                    b.Property<string>("ename")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("enumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("gender");

                    b.Property<string>("idNumber")
                        .HasMaxLength(20);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime?>("leaveDate");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("remark")
                        .HasMaxLength(300);

                    b.Property<string>("specialities")
                        .HasMaxLength(100);

                    b.Property<string>("title")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.HasIndex("companyId", "enumber")
                        .IsUnique();

                    b.ToTable("employee");
                });

            modelBuilder.Entity("RSDB.Models.employeeOpenid", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<string>("enumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<string>("openid")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("remainAttendance");

                    b.Property<string>("unionid")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("employeeOpenid");
                });

            modelBuilder.Entity("RSDB.Models.equipment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime?>("depreciationDate");

                    b.Property<decimal>("depreciationRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("deptId");

                    b.Property<string>("deptName")
                        .HasMaxLength(100);

                    b.Property<string>("ecode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("emodal")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ename")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("etype");

                    b.Property<string>("kinds")
                        .HasMaxLength(100);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("processSection")
                        .HasMaxLength(100);

                    b.Property<string>("productLine")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("purchaseDate");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("remark")
                        .HasMaxLength(300);

                    b.Property<string>("unit")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<decimal>("unitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("usagePower")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("usefullife");

                    b.Property<string>("workshop")
                        .HasMaxLength(100);

                    b.Property<int?>("workshopId");

                    b.HasKey("id");

                    b.HasIndex("companyId", "ecode")
                        .IsUnique();

                    b.ToTable("equipment");
                });

            modelBuilder.Entity("RSDB.Models.expert", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("birthday");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("eduLevel");

                    b.Property<string>("email")
                        .HasMaxLength(30);

                    b.Property<string>("expertNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<byte>("gender");

                    b.Property<string>("honour")
                        .HasMaxLength(3000);

                    b.Property<string>("idNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("industryCode")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime?>("issueDate");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("level");

                    b.Property<string>("partHistory")
                        .IsRequired()
                        .HasMaxLength(3000);

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("photoUrl")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<byte>("policitalStatus");

                    b.Property<string>("postcode");

                    b.Property<string>("qrcode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("realName")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<byte>("status");

                    b.Property<string>("uuid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("validDate");

                    b.Property<string>("workHistory")
                        .IsRequired()
                        .HasMaxLength(3000);

                    b.HasKey("id");

                    b.ToTable("expert");
                });

            modelBuilder.Entity("RSDB.Models.i_equipment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("ecode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("effect")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("entryDate");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.HasKey("id");

                    b.ToTable("i_equipment");
                });

            modelBuilder.Entity("RSDB.Models.i_member", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime?>("entryDate");

                    b.Property<string>("enumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<bool>("isMaster");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<string>("role")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("i_member");
                });

            modelBuilder.Entity("RSDB.Models.insuranceConfig", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<decimal>("endowment")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("endowmentOfCom")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("house")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("houseOfCom")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("injury")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("injuryOfCom")
                        .HasColumnType("decimal(6,4)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<decimal>("maternity")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("maternityOfCom")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("medical")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("medicalOfCom")
                        .HasColumnType("decimal(6,4)");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<decimal>("unemployment")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("unemploymentOfCom")
                        .HasColumnType("decimal(6,4)");

                    b.Property<int>("updatorId");

                    b.HasKey("id");

                    b.HasIndex("companyId")
                        .IsUnique();

                    b.ToTable("insuranceConfig");
                });

            modelBuilder.Entity("RSDB.Models.p_adjust", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("pRdId");

                    b.Property<int>("projectId");

                    b.Property<int>("rdType");

                    b.HasKey("id");

                    b.HasIndex("pRdId", "rdType")
                        .IsUnique();

                    b.ToTable("p_adjust");
                });

            modelBuilder.Entity("RSDB.Models.p_attendance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("attendanceDataId");

                    b.Property<int>("companyId");

                    b.Property<string>("content")
                        .HasMaxLength(300);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("enumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<TimeSpan?>("offTime1");

                    b.Property<TimeSpan?>("offTime2");

                    b.Property<TimeSpan?>("offTime3");

                    b.Property<TimeSpan?>("onTime1");

                    b.Property<TimeSpan?>("onTime2");

                    b.Property<TimeSpan?>("onTime3");

                    b.Property<bool>("owner");

                    b.Property<int>("projectId");

                    b.Property<DateTime>("workDate");

                    b.Property<decimal?>("workHour")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("p_attendance");
                });

            modelBuilder.Entity("RSDB.Models.p_attendance_month", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("hoursAttData")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("personAttData")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("projectId");

                    b.HasKey("id");

                    b.HasIndex("companyId", "projectId", "month")
                        .IsUnique();

                    b.ToTable("p_attendance_month");
                });

            modelBuilder.Entity("RSDB.Models.p_attendance_used", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("enumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<decimal?>("remainHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("timeRange")
                        .HasMaxLength(200);

                    b.Property<DateTime>("workDate");

                    b.Property<decimal?>("workHour")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("companyId", "enumber", "workDate")
                        .IsUnique();

                    b.ToTable("p_attendance_used");
                });

            modelBuilder.Entity("RSDB.Models.p_audit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("mode");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("nodeId");

                    b.Property<bool>("pass");

                    b.Property<int>("sourceProjectId");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("p_audit");
                });

            modelBuilder.Entity("RSDB.Models.p_audit_log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("auditId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("nodeId");

                    b.Property<bool>("pass");

                    b.Property<string>("suggestion")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("p_audit_log");
                });

            modelBuilder.Entity("RSDB.Models.p_budget", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("key")
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime?>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<string>("stage")
                        .HasMaxLength(10);

                    b.Property<byte>("type");

                    b.Property<decimal>("value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("p_budget");
                });

            modelBuilder.Entity("RSDB.Models.p_budget_status", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<int>("status");

                    b.HasKey("id");

                    b.ToTable("p_budget_status");
                });

            modelBuilder.Entity("RSDB.Models.p_design", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("designDataId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<decimal>("rdAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("p_design");
                });

            modelBuilder.Entity("RSDB.Models.p_docFile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("docFileId");

                    b.Property<string>("docFileName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("docFileTemplateId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime?>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<int>("seq");

                    b.Property<string>("stage")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("id");

                    b.ToTable("p_docFile");
                });

            modelBuilder.Entity("RSDB.Models.p_docFile_data", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("data")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("filledItems");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("pdocFileId");

                    b.Property<int>("totalItems");

                    b.Property<int>("wordLength");

                    b.HasKey("id");

                    b.ToTable("p_docFile_data");
                });

            modelBuilder.Entity("RSDB.Models.p_docFile_trial", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("pdocFileId");

                    b.Property<int>("trialId");

                    b.HasKey("id");

                    b.ToTable("p_docFile_trial");
                });

            modelBuilder.Entity("RSDB.Models.p_document", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("docName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("docNumber")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("processId");

                    b.Property<int>("projectId");

                    b.Property<int>("stageId");

                    b.Property<int>("templateId");

                    b.HasKey("id");

                    b.ToTable("p_document");
                });

            modelBuilder.Entity("RSDB.Models.p_energy", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("energyDataId");

                    b.Property<int>("etype");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<decimal>("rdAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("rdHour")
                        .HasColumnType("decimal(6,2)");

                    b.Property<decimal>("rdYield")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,6)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("totalHour")
                        .HasColumnType("decimal(6,2)");

                    b.Property<decimal>("totalYield")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,6)")
                        .HasDefaultValue(0m);

                    b.HasKey("id");

                    b.ToTable("p_energy");
                });

            modelBuilder.Entity("RSDB.Models.p_equipment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("ecode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("equData")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("equipmentDataId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<decimal>("workHours")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("p_equipment");
                });

            modelBuilder.Entity("RSDB.Models.p_equipment_used", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("ecode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<decimal>("remainHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("usedEquData")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<decimal>("workHours")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("companyId", "ecode", "month")
                        .IsUnique();

                    b.ToTable("p_equipment_used");
                });

            modelBuilder.Entity("RSDB.Models.p_file", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("fileName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("filePath")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("p_file");
                });

            modelBuilder.Entity("RSDB.Models.p_inspection", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("inspectionDataId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<decimal>("rdAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("p_inspection");
                });

            modelBuilder.Entity("RSDB.Models.p_material", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<decimal>("depreciationRatio")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("finishAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("finishQuantity")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("finishUnitPrice")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("materialDataId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<decimal>("rdAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("rdType");

                    b.Property<decimal>("rdYield")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("totalYield")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("used")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("wasteAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("wasteQuantity")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("wasteUnitPrice")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("id");

                    b.ToTable("p_material");
                });

            modelBuilder.Entity("RSDB.Models.p_material_trace", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<decimal>("normalOutputRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("pId");

                    b.Property<decimal>("rdLoss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("rdLossAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("rdLossRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("rdOutPut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("rdOutputAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("rdOutputRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("sampleRevenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("scrap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("scrapAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("scrapNo")
                        .HasMaxLength(100);

                    b.Property<decimal>("scrapPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("scrapRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("specialIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("specialIncomeNo")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("p_material_trace");
                });

            modelBuilder.Entity("RSDB.Models.p_patent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("applyDate");

                    b.Property<DateTime?>("authorizeDate");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("ownership");

                    b.Property<string>("patentName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("patentNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("projectId");

                    b.Property<DateTime?>("searchDate");

                    b.HasKey("id");

                    b.ToTable("p_patent");
                });

            modelBuilder.Entity("RSDB.Models.p_patent_plan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<string>("disclosureParperPath")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int?>("masterId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("patentName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("patentNo")
                        .HasMaxLength(50);

                    b.Property<int>("projectId");

                    b.Property<int>("source");

                    b.Property<int>("status");

                    b.HasKey("id");

                    b.ToTable("p_patent_plan");
                });

            modelBuilder.Entity("RSDB.Models.p_project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("beginDate");

                    b.Property<int>("beginYear");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("deptName")
                        .HasMaxLength(200);

                    b.Property<DateTime>("endDate");

                    b.Property<int>("endYear");

                    b.Property<int?>("estimateExpense");

                    b.Property<int>("formula");

                    b.Property<decimal>("govCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("hasChild");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("masterENumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("parentId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("pname")
                        .HasMaxLength(200);

                    b.Property<string>("processSection")
                        .HasMaxLength(200);

                    b.Property<string>("productLine")
                        .HasMaxLength(200);

                    b.Property<int>("projectSource");

                    b.Property<int?>("rdDeptId");

                    b.Property<int>("rdIndex");

                    b.Property<string>("rdNumber")
                        .HasMaxLength(50);

                    b.Property<string>("rdTitle")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("result");

                    b.Property<DateTime?>("tBeginDate");

                    b.Property<DateTime?>("tEndDate");

                    b.Property<int>("targets");

                    b.Property<string>("tecIndustry")
                        .HasMaxLength(20);

                    b.Property<bool>("trialProd");

                    b.Property<string>("workshop")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("p_project");
                });

            modelBuilder.Entity("RSDB.Models.p_project_number", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectNum");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("p_project_number");
                });

            modelBuilder.Entity("RSDB.Models.p_project_status", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<int>("rdType");

                    b.Property<int>("status");

                    b.HasKey("id");

                    b.ToTable("p_project_status");
                });

            modelBuilder.Entity("RSDB.Models.p_rdEmployee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("enumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<decimal>("rdHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("rdInsuranceFund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("rdPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("rdRatio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("p_rdEmployee");
                });

            modelBuilder.Entity("RSDB.Models.p_rdEmployee_plan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("enumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<decimal>("planTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("projectId");

                    b.HasKey("id");

                    b.HasIndex("companyId", "projectId", "enumber", "month")
                        .IsUnique();

                    b.ToTable("p_rdEmployee_plan");
                });

            modelBuilder.Entity("RSDB.Models.p_rdEquipment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("ecode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<decimal?>("powerRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("powerUnitPrice")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("projectId");

                    b.Property<decimal>("rdDepreciation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("rdHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("rdRatio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("id");

                    b.ToTable("p_rdEquipment");
                });

            modelBuilder.Entity("RSDB.Models.p_report", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("cnt");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("rname")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("ryear");

                    b.Property<string>("techIntro")
                        .HasMaxLength(800);

                    b.HasKey("id");

                    b.ToTable("p_report");
                });

            modelBuilder.Entity("RSDB.Models.p_reviewCommittee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("enumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("p_reviewCommittee");
                });

            modelBuilder.Entity("RSDB.Models.p_stage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("beginDate");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime?>("endDate");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("stageKey")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("stageName")
                        .HasMaxLength(50);

                    b.Property<string>("workDesc")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("p_stage");
                });

            modelBuilder.Entity("RSDB.Models.p_summary", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("accountNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<decimal>("rdFunds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("rdType");

                    b.Property<int>("updatorId");

                    b.HasKey("id");

                    b.HasIndex("projectId", "month", "rdType")
                        .IsUnique();

                    b.ToTable("p_summary");
                });

            modelBuilder.Entity("RSDB.Models.p_trialProd", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("actualPO");

                    b.Property<decimal?>("auxMaterial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<TimeSpan?>("endTime");

                    b.Property<decimal?>("fuel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("gas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<decimal?>("mainMaterial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("place")
                        .HasMaxLength(100);

                    b.Property<int>("planPO");

                    b.Property<string>("pos")
                        .HasMaxLength(100);

                    b.Property<decimal?>("power")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("projectId");

                    b.Property<decimal?>("spare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan?>("startTime");

                    b.Property<DateTime?>("trialDate");

                    b.Property<string>("trialGroup")
                        .HasMaxLength(100);

                    b.Property<string>("unit")
                        .HasMaxLength(10);

                    b.HasKey("id");

                    b.ToTable("p_trialProd");
                });

            modelBuilder.Entity("RSDB.Models.p_voucher", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<int>("rdType");

                    b.Property<string>("voucherNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("p_voucher");
                });

            modelBuilder.Entity("RSDB.Models.p_worktimeRatio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("auxiliary")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<decimal>("laboratory")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<decimal>("production")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("projectId");

                    b.Property<decimal>("research")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("technical")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("id");

                    b.ToTable("p_worktimeRatio");
                });

            modelBuilder.Entity("RSDB.Models.p_yield_config", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("deptName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<TimeSpan?>("endTime");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<decimal?>("planYield")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("projectId");

                    b.Property<decimal>("rdYield")
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeSpan?>("startTime");

                    b.Property<decimal>("totalYield")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("trialDate");

                    b.Property<string>("unit")
                        .HasMaxLength(10);

                    b.HasKey("id");

                    b.ToTable("p_yield_config");
                });

            modelBuilder.Entity("RSDB.Models.patent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("applyDateTime");

                    b.Property<string>("caseStatus")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("caseSubmissionDate");

                    b.Property<int?>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<decimal?>("expiryAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("expiryDate");

                    b.Property<string>("inventor")
                        .HasMaxLength(200);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("mainType")
                        .HasMaxLength(100);

                    b.Property<string>("mainTypeNo")
                        .HasMaxLength(100);

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("patentName")
                        .HasMaxLength(200);

                    b.Property<string>("patentNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("projectId");

                    b.Property<int?>("year");

                    b.HasKey("id");

                    b.ToTable("patent");
                });

            modelBuilder.Entity("RSDB.Models.patent_apply", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address")
                        .HasMaxLength(100);

                    b.Property<string>("applyName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("patentNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("patent_apply");
                });

            modelBuilder.Entity("RSDB.Models.patent_cost", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("costType")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<bool>("isPay");

                    b.Property<bool>("isRemind");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime?>("limitDate");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("patentNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("payDateTime");

                    b.Property<string>("payer")
                        .HasMaxLength(100);

                    b.Property<string>("receiptNo")
                        .HasMaxLength(50);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("remindDateTime");

                    b.Property<string>("status")
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("patent_cost");
                });

            modelBuilder.Entity("RSDB.Models.rdAccountDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("accNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("accType");

                    b.Property<decimal>("balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<decimal>("credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("direction")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<DateTime>("rdDate");

                    b.Property<string>("summary")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("rdAccountDetail");
                });

            modelBuilder.Entity("RSDB.Models.rdDept", b =>
                {
                    b.Property<short>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("deptName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("identity")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("level");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<short>("parentId");

                    b.Property<string>("remark")
                        .HasMaxLength(300);

                    b.Property<short>("year");

                    b.HasKey("id");

                    b.ToTable("rdDept");
                });

            modelBuilder.Entity("RSDB.Models.rdEmployee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("enumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("etype");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("rdDeptId");

                    b.Property<short>("year");

                    b.HasKey("id");

                    b.ToTable("rdEmployee");
                });

            modelBuilder.Entity("RSDB.Models.rdEquipment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("ecode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("rdDeptId");

                    b.Property<short>("year");

                    b.HasKey("id");

                    b.ToTable("rdEquipment");
                });

            modelBuilder.Entity("RSDB.Models.salaryConfig", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<string>("config")
                        .HasMaxLength(2000);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("number");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("salaryConfig");
                });

            modelBuilder.Entity("RSDB.Models.sys_dictionary", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("key")
                        .HasMaxLength(50);

                    b.Property<int>("order");

                    b.Property<string>("parentKey")
                        .HasMaxLength(50);

                    b.Property<string>("remark")
                        .HasMaxLength(300);

                    b.Property<byte>("type");

                    b.Property<string>("value")
                        .HasMaxLength(300);

                    b.HasKey("id");

                    b.ToTable("sys_dictionary");
                });

            modelBuilder.Entity("RSDB.Models.sys_docList", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("classify")
                        .HasMaxLength(20);

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("desciption")
                        .HasMaxLength(200);

                    b.Property<string>("docName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("listType");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<bool>("optional");

                    b.Property<string>("rdActivities")
                        .HasMaxLength(50);

                    b.Property<string>("samplePath")
                        .HasMaxLength(200);

                    b.Property<int>("seq");

                    b.Property<string>("subClassify")
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("sys_docList");
                });

            modelBuilder.Entity("RSDB.Models.sys_docOperator", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("listId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("operators")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("sys_docOperator");
                });

            modelBuilder.Entity("RSDB.Models.sys_document", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime?>("docDate");

                    b.Property<DateTime?>("docMonth");

                    b.Property<int>("downloadTimes");

                    b.Property<string>("fileName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("filePath")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("fileType");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("listId");

                    b.Property<short>("month");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("patentNo")
                        .HasMaxLength(50);

                    b.Property<int>("projectId");

                    b.Property<byte>("projectType");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("stageKey")
                        .HasMaxLength(50);

                    b.Property<string>("workshop")
                        .HasMaxLength(100);

                    b.Property<int?>("workshopId");

                    b.Property<short>("year");

                    b.HasKey("id");

                    b.ToTable("sys_document");
                });

            modelBuilder.Entity("RSDB.Models.sys_insuranceConfig", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("deptId");

                    b.Property<DateTime?>("endMonth");

                    b.Property<decimal>("endowment")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("endowmentOfCom")
                        .HasColumnType("decimal(6,4)");

                    b.Property<string>("enumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<decimal>("house")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("houseOfCom")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("injury")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("injuryOfCom")
                        .HasColumnType("decimal(6,4)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<decimal>("maternity")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("maternityOfCom")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("medical")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("medicalOfCom")
                        .HasColumnType("decimal(6,4)");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<DateTime>("startMonth");

                    b.Property<decimal>("unemployment")
                        .HasColumnType("decimal(6,4)");

                    b.Property<decimal>("unemploymentOfCom")
                        .HasColumnType("decimal(6,4)");

                    b.HasKey("id");

                    b.ToTable("sys_insuranceConfig");
                });

            modelBuilder.Entity("RSDB.Models.sys_log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<string>("companyName")
                        .HasMaxLength(50);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("logParams")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("logTime");

                    b.Property<int>("logType");

                    b.Property<string>("logUrl")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("requestIp")
                        .HasMaxLength(30);

                    b.Property<int>("source");

                    b.Property<int>("userId");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("sys_log");
                });

            modelBuilder.Entity("RSDB.Models.sys_session", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<DateTime>("expireTime");

                    b.Property<int>("source");

                    b.Property<string>("token")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updateTime");

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.ToTable("sys_session");
                });

            modelBuilder.Entity("RSDB.Models.sys_tableField", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("fieldTitle")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("tableId")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("sys_tableField");
                });

            modelBuilder.Entity("RSDB.Models.t_attachments", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("filePath")
                        .HasMaxLength(500);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<int>("settingId");

                    b.HasKey("id");

                    b.ToTable("t_attachments");
                });

            modelBuilder.Entity("RSDB.Models.t_declaration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<string>("content");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("parentKey")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("projectId");

                    b.Property<int>("seq");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.HasKey("id");

                    b.ToTable("t_declaration");
                });

            modelBuilder.Entity("RSDB.Models.t_direction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("appGuideUrl")
                        .HasMaxLength(200);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("direction")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("expiryDate");

                    b.Property<bool>("hasStage");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("linkName")
                        .HasMaxLength(50);

                    b.Property<string>("linkTel")
                        .HasMaxLength(100);

                    b.Property<string>("mainDirection")
                        .HasMaxLength(50);

                    b.Property<string>("noticeNo")
                        .HasMaxLength(50);

                    b.Property<string>("noticeUrl")
                        .HasMaxLength(200);

                    b.Property<string>("policyPath")
                        .HasMaxLength(300);

                    b.Property<int>("productId");

                    b.Property<string>("publicItemUrl")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("t_direction");
                });

            modelBuilder.Entity("RSDB.Models.t_product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address")
                        .HasMaxLength(200);

                    b.Property<string>("addressCode")
                        .HasMaxLength(30);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("govName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("managerId");

                    b.Property<string>("pLevel")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("pType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("t_product");
                });

            modelBuilder.Entity("RSDB.Models.t_product_stage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("directionId");

                    b.Property<DateTime>("expiryDate");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("seq");

                    b.Property<string>("stageKey")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("id");

                    b.ToTable("t_product_stage");
                });

            modelBuilder.Entity("RSDB.Models.t_product_stage_list", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("directionId");

                    b.Property<string>("itemName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("itemType");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("pattern")
                        .HasMaxLength(50);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<bool>("required");

                    b.Property<int>("seq");

                    b.Property<int>("stageId");

                    b.HasKey("id");

                    b.ToTable("t_product_stage_list");
                });

            modelBuilder.Entity("RSDB.Models.t_project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("aidType")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("applyDate");

                    b.Property<DateTime?>("beginDate");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("directionId");

                    b.Property<DateTime?>("endDate");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("linkName")
                        .HasMaxLength(30);

                    b.Property<string>("linkTel")
                        .HasMaxLength(30);

                    b.Property<string>("masterName")
                        .HasMaxLength(30);

                    b.Property<string>("masterTel")
                        .HasMaxLength(30);

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("pname")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("productId");

                    b.Property<short>("pyear");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("reportType")
                        .HasMaxLength(30);

                    b.Property<int>("sourceProjectId");

                    b.HasKey("id");

                    b.ToTable("t_project");
                });

            modelBuilder.Entity("RSDB.Models.t_projectAppendix", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("downloadTimes");

                    b.Property<string>("fileName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("filePath")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("t_projectAppendix");
                });

            modelBuilder.Entity("RSDB.Models.t_projectBasic", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<int>("conssRuctionType");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("industryCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("mainContents")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("notInvolveRemark")
                        .HasMaxLength(200);

                    b.Property<int>("projectId");

                    b.Property<string>("projectType")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("recordNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("technicalField")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("id");

                    b.ToTable("t_projectBasic");
                });

            modelBuilder.Entity("RSDB.Models.t_projectCost", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("auditAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("bankTransferDates")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("bankVoucher")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("cname")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("companyId");

                    b.Property<DateTime>("contractDate");

                    b.Property<string>("contractNumber")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("ctype");

                    b.Property<decimal>("fillAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("invoiceDate");

                    b.Property<string>("invoiceNumber")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("invoiceVoucher")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("isBankTransfer");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("payDates")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("payee")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("projectId");

                    b.Property<int>("quantity");

                    b.HasKey("id");

                    b.ToTable("t_projectCost");
                });

            modelBuilder.Entity("RSDB.Models.t_projectImplement", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("businessIncome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("carbonDioxide")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("casualti")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("companyId");

                    b.Property<string>("consumptionPer")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("digitalize")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("drivenFundsInput")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("expect")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("goodOfRate")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("lineOfInfo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("manpowerSavings")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("numericalControl")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("profit")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("projectId");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("talentTeam")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("taxRevenue")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("unitWaterUse")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("weedOut")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("t_projectImplement");
                });

            modelBuilder.Entity("RSDB.Models.t_projectInvestMent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<decimal>("constructionCostOfPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("constructionCostOfReport")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<decimal>("digitalIntegrationOfPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("digitalIntegrationOfReport")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("equipmentCostOfPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("equipmentCostOfReport")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("inspectionOfPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("inspectionOfReport")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("installationCostOfPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("installationCostOfReport")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<decimal>("rdOutsourcingOfPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("rdOutsourcingOfReport")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("softwareKitOfPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("softwareKitOfReport")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("waterOfPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("waterOfReport")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("t_projectInvestMent");
                });

            modelBuilder.Entity("RSDB.Models.t_projectOther", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("areaCode")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<string>("synopsis")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("targetAndContent")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.HasKey("id");

                    b.ToTable("t_projectOther");
                });

            modelBuilder.Entity("RSDB.Models.t_projectQuota", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<decimal>("investment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("investmentOfPlan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<int>("robotsCount");

                    b.Property<int>("robotsOfAbroad");

                    b.Property<int>("robotsOfDomestic");

                    b.Property<int>("robotsOfGd");

                    b.Property<int>("robotsOfPlan");

                    b.Property<decimal>("transform")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("transformOfPlan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("water")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("waterOfPlan")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("t_projectQuota");
                });

            modelBuilder.Entity("RSDB.Models.t_project_list", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("fileName")
                        .HasMaxLength(200);

                    b.Property<string>("filePath")
                        .HasMaxLength(500);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<int>("stageListId");

                    b.HasKey("id");

                    b.ToTable("t_project_list");
                });

            modelBuilder.Entity("RSDB.Models.t_step", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("parentId");

                    b.Property<int>("productId");

                    b.Property<int>("seq");

                    b.Property<string>("stepName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("stepType");

                    b.HasKey("id");

                    b.ToTable("t_step");
                });

            modelBuilder.Entity("RSDB.Models.t_step_detail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("fileName")
                        .HasMaxLength(500);

                    b.Property<string>("filePath")
                        .HasMaxLength(500);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("productId");

                    b.Property<int>("projectId");

                    b.Property<int>("stepId");

                    b.HasKey("id");

                    b.ToTable("t_step_detail");
                });

            modelBuilder.Entity("RSDB.Models.t_step_status", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("auditTime");

                    b.Property<int>("auditorId");

                    b.Property<int>("productId");

                    b.Property<string>("remark")
                        .HasMaxLength(500);

                    b.Property<int>("status");

                    b.HasKey("id");

                    b.ToTable("t_step_status");
                });

            modelBuilder.Entity("RSDB.Models.tech_requirement", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<string>("cooperateSchool")
                        .HasMaxLength(50);

                    b.Property<string>("cooperateType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("domain")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("filePath")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<decimal>("investment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("linkEmail")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("linkName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("linkTel")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("otherCooperateType")
                        .HasMaxLength(100);

                    b.Property<string>("otherDomain")
                        .HasMaxLength(100);

                    b.Property<string>("position")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("requirement")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<int>("status");

                    b.Property<string>("techName")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("tech_requirement");
                });

            modelBuilder.Entity("RSDB.Models.user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("avatar")
                        .HasMaxLength(20);

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("email")
                        .HasMaxLength(100);

                    b.Property<byte>("gender");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("realName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("remark")
                        .HasMaxLength(300);

                    b.Property<byte>("status");

                    b.Property<string>("tel")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<byte>("type");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("RSDB.Models.workshop", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("fullPath")
                        .HasMaxLength(100);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("msLastUpdatorId");

                    b.Property<int>("parentId");

                    b.Property<string>("remark")
                        .HasMaxLength(300);

                    b.Property<int>("seq");

                    b.Property<string>("workshopName")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("workshop");
                });
#pragma warning restore 612, 618
        }
    }
}
