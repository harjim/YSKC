// <auto-generated />
using System;
using MSDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MSDB.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220824010918_addWork_recordTotalAmountCol")]
    partial class addWork_recordTotalAmountCol
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MSDB.Models.app_menu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("fullPath")
                        .HasMaxLength(300);

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<byte>("level");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("parentId");

                    b.Property<string>("perms")
                        .HasMaxLength(200);

                    b.Property<int>("platform");

                    b.Property<string>("remark")
                        .HasMaxLength(300);

                    b.Property<byte>("seq");

                    b.Property<byte>("status");

                    b.Property<byte>("type");

                    b.Property<string>("url")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("app_menu");
                });

            modelBuilder.Entity("MSDB.Models.app_role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("remark")
                        .HasMaxLength(100);

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("app_role");
                });

            modelBuilder.Entity("MSDB.Models.app_role_data", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("dataType");

                    b.Property<int>("functionId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("roleId");

                    b.HasKey("id");

                    b.ToTable("app_role_data");
                });

            modelBuilder.Entity("MSDB.Models.app_role_menu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("menuId");

                    b.Property<int>("roleId");

                    b.HasKey("id");

                    b.ToTable("app_role_menu");
                });

            modelBuilder.Entity("MSDB.Models.app_user_role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("roleId");

                    b.Property<string>("serviceDeptIds")
                        .HasMaxLength(300);

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.ToTable("app_user_role");
                });

            modelBuilder.Entity("MSDB.Models.article", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("author")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("issueDate");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("source")
                        .HasMaxLength(100);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("article");
                });

            modelBuilder.Entity("MSDB.Models.c_rd_funds", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<decimal?>("k10000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k10100")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k20000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k20100")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k20200")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k20300")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k20500")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k20600")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k20700")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k30000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k40000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k40200")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k50000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k69900")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<DateTime>("month");

                    b.Property<decimal?>("revenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("type");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.HasIndex("companyId", "year", "month", "type")
                        .IsUnique();

                    b.ToTable("c_rd_funds");
                });

            modelBuilder.Entity("MSDB.Models.c_rd_funds_district", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal?>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("deptId");

                    b.Property<decimal?>("k10000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k10100")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k20000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k20100")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k20200")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k20300")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k20500")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k20600")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k20700")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k30000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k40000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k40200")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k50000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("k69900")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<DateTime>("month");

                    b.Property<decimal?>("revenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("type");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.HasIndex("deptId", "year", "month", "type")
                        .IsUnique();

                    b.ToTable("c_rd_funds_district");
                });

            modelBuilder.Entity("MSDB.Models.c_rd_summary_district", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("accountType");

                    b.Property<int?>("achievementCnt");

                    b.Property<decimal?>("budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("buildCount");

                    b.Property<decimal?>("c10000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c10100")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c20000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c20100")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c20200")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c20300")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c20500")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c20600")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c20700")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c30000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c40000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c40200")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c50000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c69900")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("costAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("deptId");

                    b.Property<int?>("docFileCount");

                    b.Property<int?>("employeeAmount");

                    b.Property<int?>("finaMode");

                    b.Property<int?>("highTechCount");

                    b.Property<decimal?>("highTechIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("lastRdCnt");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int?>("levelFileCnt");

                    b.Property<int?>("nextRdCnt");

                    b.Property<int?>("patentCnt");

                    b.Property<int?>("proposalCnt");

                    b.Property<int?>("rdCount");

                    b.Property<int?>("rdEmployeeCount");

                    b.Property<int?>("rdEquipmentCount");

                    b.Property<int?>("rdFee");

                    b.Property<decimal?>("rdFunds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("rdPlanCount");

                    b.Property<int?>("reportCnt");

                    b.Property<decimal?>("revenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("revenueFcst");

                    b.Property<int?>("salesRdFee");

                    b.Property<decimal?>("totalIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.HasIndex("deptId", "year")
                        .IsUnique();

                    b.ToTable("c_rd_summary_district");
                });

            modelBuilder.Entity("MSDB.Models.checkInst", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("accountBank")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("accountName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("accountNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("filePath")
                        .HasMaxLength(200);

                    b.Property<string>("instName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("linkMan")
                        .HasMaxLength(20);

                    b.Property<string>("linkTel")
                        .HasMaxLength(20);

                    b.Property<string>("payRemark")
                        .HasMaxLength(500);

                    b.Property<decimal>("postage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("checkInst");
                });

            modelBuilder.Entity("MSDB.Models.checkInst_price", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("checkInstId");

                    b.Property<int>("checkType");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("days");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.HasKey("id");

                    b.ToTable("checkInst_price");
                });

            modelBuilder.Entity("MSDB.Models.contractTraceability", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("contractNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("customerId");

                    b.Property<string>("customerName")
                        .HasMaxLength(200);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("qrcode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("thecover")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("contractTraceability");
                });

            modelBuilder.Entity("MSDB.Models.customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("accountSystem")
                        .HasMaxLength(20);

                    b.Property<string>("addressCode")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int?>("capital");

                    b.Property<string>("capitalUnit")
                        .HasMaxLength(50);

                    b.Property<string>("companyAddress")
                        .HasMaxLength(100);

                    b.Property<int?>("companyId");

                    b.Property<string>("companyLevel")
                        .HasMaxLength(10);

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("companyType");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("creatorTime");

                    b.Property<string>("creditCode")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int?>("deptId");

                    b.Property<DateTime?>("effectDate");

                    b.Property<string>("email")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("firstDevFee");

                    b.Property<byte>("from");

                    b.Property<int>("groupId");

                    b.Property<bool>("hasDevAccount");

                    b.Property<bool>("highTec");

                    b.Property<string>("highTecIndustry")
                        .HasMaxLength(20);

                    b.Property<string>("industryCode")
                        .HasMaxLength(30);

                    b.Property<string>("invoiceTitle")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("linkMan")
                        .HasMaxLength(20);

                    b.Property<string>("linkTel")
                        .HasMaxLength(20);

                    b.Property<string>("mainIndustry")
                        .HasMaxLength(10);

                    b.Property<int?>("owerId");

                    b.Property<string>("owner")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("realTaxAuthorities")
                        .HasMaxLength(30);

                    b.Property<DateTime>("registerTime");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<int>("status");

                    b.Property<string>("taxAuthorities")
                        .HasMaxLength(30);

                    b.Property<string>("taxpayerId")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("id");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("MSDB.Models.customer_account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("customerId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("pUrl")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("platform")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("customer_account");
                });

            modelBuilder.Entity("MSDB.Models.customer_trace", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("customerId");

                    b.Property<string>("info")
                        .HasMaxLength(500);

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("customer_trace");
                });

            modelBuilder.Entity("MSDB.Models.customer_user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("customerId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("mType");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.ToTable("customer_user");
                });

            modelBuilder.Entity("MSDB.Models.d_user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("dingUserId")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("openid")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("unionid")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.ToTable("d_user");
                });

            modelBuilder.Entity("MSDB.Models.daily_report", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("commit");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("done");

                    b.Property<int>("reject");

                    b.Property<DateTime>("updateTime");

                    b.Property<int>("userId");

                    b.Property<DateTime>("workDate");

                    b.HasKey("id");

                    b.HasIndex("userId", "workDate", "companyId")
                        .IsUnique();

                    b.ToTable("daily_report");
                });

            modelBuilder.Entity("MSDB.Models.daily_report_detail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("commit");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("done");

                    b.Property<int>("moduleId");

                    b.Property<int>("reject");

                    b.Property<DateTime>("updateTime");

                    b.Property<int>("userId");

                    b.Property<DateTime>("workDate");

                    b.HasKey("id");

                    b.HasIndex("userId", "workDate", "moduleId", "companyId")
                        .IsUnique();

                    b.ToTable("daily_report_detail");
                });

            modelBuilder.Entity("MSDB.Models.district_summary", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("deptId");

                    b.Property<decimal>("rdFunds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("updateTime");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.HasIndex("deptId", "year")
                        .IsUnique();

                    b.ToTable("district_summary");
                });

            modelBuilder.Entity("MSDB.Models.expert", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("birthday");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("eduLevel");

                    b.Property<string>("email")
                        .HasMaxLength(30);

                    b.Property<string>("expertNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<byte>("gender");

                    b.Property<string>("honour")
                        .HasMaxLength(1000);

                    b.Property<string>("idNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("industryCode")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime?>("issueDate");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("level");

                    b.Property<string>("partHistory")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("photoUrl")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<byte>("policitalStatus");

                    b.Property<string>("postcode");

                    b.Property<string>("qrcode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("realName")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<byte>("status");

                    b.Property<string>("uuid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("validDate");

                    b.Property<string>("workHistory")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.HasKey("id");

                    b.ToTable("expert");
                });

            modelBuilder.Entity("MSDB.Models.flow", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("flow");
                });

            modelBuilder.Entity("MSDB.Models.flowBranch", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("condition")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("flowId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("nodeId");

                    b.Property<int>("seq");

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("flowBranch");
                });

            modelBuilder.Entity("MSDB.Models.flowInstance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("auditLevel");

                    b.Property<string>("auditUsers")
                        .HasMaxLength(200);

                    b.Property<int?>("companyId");

                    b.Property<string>("content")
                        .HasMaxLength(200);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("curNodeId");

                    b.Property<int>("deptId");

                    b.Property<DateTime?>("expired");

                    b.Property<int>("flowId");

                    b.Property<int>("lastSubmiter");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("moduleId");

                    b.Property<int?>("nodeStatus");

                    b.Property<bool>("revokable")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<int>("status");

                    b.HasKey("id");

                    b.ToTable("flowInstance");
                });

            modelBuilder.Entity("MSDB.Models.flowInstance_achievement", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("achievementId");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("instanceId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("moduleId");

                    b.HasKey("id");

                    b.HasIndex("achievementId")
                        .IsUnique();

                    b.ToTable("flowInstance_achievement");
                });

            modelBuilder.Entity("MSDB.Models.flowInstance_curNode", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("auditLevel");

                    b.Property<string>("auditUsers")
                        .HasMaxLength(200);

                    b.Property<bool>("closed");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("curNodeId");

                    b.Property<DateTime?>("expired");

                    b.Property<int>("flowId");

                    b.Property<int>("instanceId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("nodeStatus");

                    b.Property<int?>("parentNode");

                    b.HasKey("id");

                    b.HasIndex("instanceId", "curNodeId")
                        .IsUnique();

                    b.ToTable("flowInstance_curNode");
                });

            modelBuilder.Entity("MSDB.Models.flowInstance_docFile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("docFileId");

                    b.Property<int>("instanceId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("moduleId");

                    b.Property<int>("rsProjectId");

                    b.HasKey("id");

                    b.HasIndex("docFileId")
                        .IsUnique();

                    b.ToTable("flowInstance_docFile");
                });

            modelBuilder.Entity("MSDB.Models.flowInstance_form", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("formId");

                    b.Property<int?>("instanceId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("moduleId");

                    b.Property<int>("status");

                    b.HasKey("id");

                    b.HasIndex("moduleId", "formId")
                        .IsUnique();

                    b.ToTable("flowInstance_form");
                });

            modelBuilder.Entity("MSDB.Models.flowInstance_log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("instanceId");

                    b.Property<bool>("lastNode");

                    b.Property<int>("msCreatorId");

                    b.Property<int>("nodeId");

                    b.Property<int>("status");

                    b.Property<int?>("submiter");

                    b.Property<string>("suggestion")
                        .HasMaxLength(2000);

                    b.HasKey("id");

                    b.ToTable("flowInstance_log");
                });

            modelBuilder.Entity("MSDB.Models.flowInstance_patent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("instanceId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("moduleId");

                    b.Property<int>("patentPlanId");

                    b.Property<int>("rsProjectId");

                    b.HasKey("id");

                    b.HasIndex("patentPlanId")
                        .IsUnique();

                    b.ToTable("flowInstance_patent");
                });

            modelBuilder.Entity("MSDB.Models.flowInstance_project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("instanceId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("moduleId");

                    b.Property<int>("projectId");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.HasIndex("companyId", "year", "projectId", "moduleId")
                        .IsUnique();

                    b.ToTable("flowInstance_project");
                });

            modelBuilder.Entity("MSDB.Models.flowInstance_proposal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("instanceId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("moduleId");

                    b.Property<int>("proposalId");

                    b.HasKey("id");

                    b.HasIndex("proposalId")
                        .IsUnique();

                    b.ToTable("flowInstance_proposal");
                });

            modelBuilder.Entity("MSDB.Models.flowInstance_rdFee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("instanceId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("moduleId");

                    b.Property<DateTime>("month");

                    b.Property<int>("rdFeeId");

                    b.Property<int>("rdType");

                    b.Property<int>("rsProjectId");

                    b.HasKey("id");

                    b.HasIndex("rdFeeId")
                        .IsUnique();

                    b.ToTable("flowInstance_rdFee");
                });

            modelBuilder.Entity("MSDB.Models.flowInstance_report", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("instanceId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("moduleId");

                    b.Property<int>("rsProjectId");

                    b.HasKey("id");

                    b.HasIndex("rsProjectId", "moduleId")
                        .IsUnique();

                    b.ToTable("flowInstance_report");
                });

            modelBuilder.Entity("MSDB.Models.flowInstance_result", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("documentId");

                    b.Property<int>("instanceId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("moduleId");

                    b.HasKey("id");

                    b.HasIndex("documentId")
                        .IsUnique();

                    b.ToTable("flowInstance_result");
                });

            modelBuilder.Entity("MSDB.Models.flowInstance_user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("instanceId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("nodeId");

                    b.Property<bool?>("status");

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.ToTable("flowInstance_user");
                });

            modelBuilder.Entity("MSDB.Models.flowModule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("auditType");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("flowId");

                    b.Property<string>("modeName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("moduleId");

                    b.Property<int>("seq");

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("flowModule");
                });

            modelBuilder.Entity("MSDB.Models.flowNode", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("configs")
                        .HasMaxLength(200);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("flowId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("mode");

                    b.Property<int?>("nextNode");

                    b.Property<int?>("nodeExpired");

                    b.Property<string>("nodeName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("nodeNumber");

                    b.Property<int?>("parentId");

                    b.Property<int?>("prevNode");

                    b.Property<bool>("skip")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("flowNode");
                });

            modelBuilder.Entity("MSDB.Models.flowNode_user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("dataId");

                    b.Property<int?>("level");

                    b.Property<int>("nodeId");

                    b.Property<string>("remark")
                        .HasMaxLength(100);

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("flowNode_user");
                });

            modelBuilder.Entity("MSDB.Models.h3_agreement", b =>
                {
                    b.Property<string>("objectId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("Approvers")
                        .HasMaxLength(30);

                    b.Property<string>("Client")
                        .HasMaxLength(80);

                    b.Property<string>("ConStatus")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("F0000016")
                        .HasMaxLength(30);

                    b.Property<string>("F0000017")
                        .HasMaxLength(30);

                    b.Property<string>("F0000018")
                        .HasMaxLength(30);

                    b.Property<string>("F0000019")
                        .HasMaxLength(30);

                    b.Property<string>("F0000021")
                        .HasMaxLength(30);

                    b.Property<string>("F0000022")
                        .HasMaxLength(30);

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("OwnerDeptId")
                        .HasMaxLength(100);

                    b.Property<string>("OwnerId")
                        .HasMaxLength(30);

                    b.Property<string>("SeqNo")
                        .HasMaxLength(50);

                    b.Property<string>("clientname")
                        .HasMaxLength(100);

                    b.HasKey("objectId");

                    b.ToTable("h3_agreement");
                });

            modelBuilder.Entity("MSDB.Models.h3_customer", b =>
                {
                    b.Property<string>("objectid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(48);

                    b.Property<string>("accountNumber")
                        .HasMaxLength(60);

                    b.Property<string>("addr")
                        .HasMaxLength(200);

                    b.Property<string>("address")
                        .HasMaxLength(150);

                    b.Property<string>("bank")
                        .HasMaxLength(60);

                    b.Property<string>("clientFPName")
                        .HasMaxLength(120);

                    b.Property<string>("clientLevel")
                        .HasMaxLength(48);

                    b.Property<string>("clientName")
                        .HasMaxLength(120);

                    b.Property<int>("companyId");

                    b.Property<string>("contactName")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("conversionDate");

                    b.Property<int>("convertStatus");

                    b.Property<string>("createdBy")
                        .HasMaxLength(50);

                    b.Property<string>("createdTime")
                        .HasMaxLength(20);

                    b.Property<string>("f0000003")
                        .HasMaxLength(48);

                    b.Property<string>("f0000022")
                        .HasMaxLength(30);

                    b.Property<string>("f0000027")
                        .HasMaxLength(60);

                    b.Property<string>("f0000029")
                        .HasMaxLength(30);

                    b.Property<string>("f0000031");

                    b.Property<string>("f0000033")
                        .HasMaxLength(30);

                    b.Property<string>("f0000034")
                        .HasMaxLength(30);

                    b.Property<string>("f0000036")
                        .HasMaxLength(30);

                    b.Property<string>("f0000037")
                        .HasMaxLength(30);

                    b.Property<string>("f0000038")
                        .HasMaxLength(60);

                    b.Property<string>("f0000039");

                    b.Property<string>("mobile")
                        .HasMaxLength(30);

                    b.Property<string>("modifiedBy")
                        .HasMaxLength(20);

                    b.Property<string>("modifiedTime")
                        .HasMaxLength(20);

                    b.Property<string>("name")
                        .HasMaxLength(120);

                    b.Property<string>("origin")
                        .HasMaxLength(60);

                    b.Property<string>("ownerDeptId")
                        .HasMaxLength(100);

                    b.Property<string>("ownerId")
                        .HasMaxLength(30);

                    b.Property<string>("salesAssistant")
                        .HasMaxLength(60);

                    b.Property<string>("salesOpportunitie")
                        .HasMaxLength(200);

                    b.Property<string>("salesRegion")
                        .HasMaxLength(48);

                    b.Property<int>("status");

                    b.Property<string>("strategicLevel")
                        .HasMaxLength(48);

                    b.Property<DateTime>("synDataDateTime");

                    b.Property<string>("taxID")
                        .HasMaxLength(30);

                    b.Property<string>("workflowInstanceId")
                        .HasMaxLength(50);

                    b.HasKey("objectid");

                    b.ToTable("h3_customer");
                });

            modelBuilder.Entity("MSDB.Models.h3_project", b =>
                {
                    b.Property<string>("objectId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("F0000006")
                        .HasMaxLength(100);

                    b.Property<string>("F0000111")
                        .HasMaxLength(30);

                    b.Property<string>("F0000112")
                        .HasMaxLength(30);

                    b.Property<string>("F0000114")
                        .HasMaxLength(30);

                    b.Property<string>("F0000115")
                        .HasMaxLength(30);

                    b.Property<string>("F0000523")
                        .HasMaxLength(30);

                    b.Property<string>("F0000524")
                        .HasMaxLength(30);

                    b.Property<string>("F0000534")
                        .HasMaxLength(100);

                    b.Property<string>("F0000537")
                        .HasMaxLength(20);

                    b.Property<string>("F0000538")
                        .HasMaxLength(20);

                    b.Property<string>("F0000539")
                        .HasMaxLength(20);

                    b.Property<string>("F0000540")
                        .HasMaxLength(20);

                    b.Property<string>("F0000541")
                        .HasMaxLength(20);

                    b.Property<string>("F0000542")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("ModifiedTime");

                    b.Property<string>("OwnerDeptId")
                        .HasMaxLength(100);

                    b.Property<int>("ProjectYear");

                    b.Property<string>("Sales")
                        .HasMaxLength(30);

                    b.HasKey("objectId");

                    b.ToTable("h3_project");
                });

            modelBuilder.Entity("MSDB.Models.innovation_member", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("innovationId");

                    b.Property<bool>("isMaster");

                    b.Property<int>("mType");

                    b.Property<int>("memberId");

                    b.HasKey("id");

                    b.HasIndex("innovationId", "mType", "memberId")
                        .IsUnique();

                    b.ToTable("innovation_member");
                });

            modelBuilder.Entity("MSDB.Models.innovation_project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("customerId");

                    b.Property<int>("deptId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("types")
                        .HasMaxLength(100);

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.HasIndex("customerId", "year")
                        .IsUnique();

                    b.ToTable("innovation_project");
                });

            modelBuilder.Entity("MSDB.Models.monthly_report", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("commit");

                    b.Property<int>("companyCnt");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("done");

                    b.Property<int>("reject");

                    b.Property<int>("serviceCnt");

                    b.Property<DateTime>("updateTime");

                    b.Property<int>("userId");

                    b.Property<DateTime>("workMonth");

                    b.HasKey("id");

                    b.HasIndex("userId", "workMonth")
                        .IsUnique();

                    b.ToTable("monthly_report");
                });

            modelBuilder.Entity("MSDB.Models.monthly_report_detail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("commit");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("done");

                    b.Property<int>("moduleId");

                    b.Property<int>("reject");

                    b.Property<DateTime>("updateTime");

                    b.Property<int>("userId");

                    b.Property<DateTime>("workMonth");

                    b.HasKey("id");

                    b.HasIndex("userId", "workMonth", "moduleId")
                        .IsUnique();

                    b.ToTable("monthly_report_detail");
                });

            modelBuilder.Entity("MSDB.Models.operation_log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("lastOperationTime");

                    b.Property<int>("operationCnt");

                    b.Property<DateTime>("operationDate");

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.HasIndex("userId", "operationDate")
                        .IsUnique();

                    b.ToTable("operation_log");
                });

            modelBuilder.Entity("MSDB.Models.patent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("applyDateTime");

                    b.Property<string>("caseStatus")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("caseSubmissionDate");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("customerId");

                    b.Property<decimal?>("expiryAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("expiryDate");

                    b.Property<string>("inventor")
                        .HasMaxLength(200);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("mainType")
                        .HasMaxLength(100);

                    b.Property<string>("mainTypeNo")
                        .HasMaxLength(100);

                    b.Property<string>("patentName")
                        .HasMaxLength(200);

                    b.Property<string>("patentNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("patent");
                });

            modelBuilder.Entity("MSDB.Models.patentData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address")
                        .HasMaxLength(200);

                    b.Property<string>("anx")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("applyDateTime");

                    b.Property<string>("applyName")
                        .HasMaxLength(300);

                    b.Property<string>("caseStatus")
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<string>("inventor")
                        .HasMaxLength(200);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int?>("mainType");

                    b.Property<string>("mainTypeNo")
                        .HasMaxLength(100);

                    b.Property<string>("patentName")
                        .HasMaxLength(200);

                    b.Property<string>("patentNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("publicDate");

                    b.Property<string>("publicNo")
                        .HasMaxLength(20);

                    b.Property<string>("queryWord")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.HasIndex("patentNo")
                        .IsUnique();

                    b.ToTable("patentData");
                });

            modelBuilder.Entity("MSDB.Models.patent_account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<int>("status");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("patent_account");
                });

            modelBuilder.Entity("MSDB.Models.patent_apply", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address")
                        .HasMaxLength(100);

                    b.Property<string>("applyName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("customerId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("patentNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("patent_apply");
                });

            modelBuilder.Entity("MSDB.Models.patent_audit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("moduleId");

                    b.Property<int>("patentPlanId");

                    b.Property<int>("status");

                    b.HasKey("id");

                    b.HasIndex("patentPlanId")
                        .IsUnique();

                    b.ToTable("patent_audit");
                });

            modelBuilder.Entity("MSDB.Models.patent_buying_demand", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("appearanceDesignNum");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("customerId");

                    b.Property<int>("engineerId");

                    b.Property<string>("filePath")
                        .HasMaxLength(1000);

                    b.Property<int?>("inventionNum");

                    b.Property<string>("inventorInfo")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int?>("ownerId");

                    b.Property<string>("remark")
                        .HasMaxLength(500);

                    b.Property<int>("status");

                    b.Property<DateTime?>("submitTime");

                    b.Property<int>("type");

                    b.Property<int?>("utilityNum");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.HasIndex("customerId", "year", "type")
                        .IsUnique();

                    b.ToTable("patent_buying_demand");
                });

            modelBuilder.Entity("MSDB.Models.patent_buying_list", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("customerId");

                    b.Property<int>("demandId");

                    b.Property<string>("filePath")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("patentSeaId");

                    b.Property<string>("sellFile")
                        .HasMaxLength(1000);

                    b.Property<int>("status");

                    b.HasKey("id");

                    b.ToTable("patent_buying_list");
                });

            modelBuilder.Entity("MSDB.Models.patent_cost", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("costType")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<bool>("isPay");

                    b.Property<bool>("isRemind");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime?>("limitDate");

                    b.Property<string>("patentNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("payDateTime");

                    b.Property<string>("payer")
                        .HasMaxLength(100);

                    b.Property<string>("receiptNo")
                        .HasMaxLength(50);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("remindDateTime");

                    b.Property<string>("status")
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("patent_cost");
                });

            modelBuilder.Entity("MSDB.Models.patent_demand", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("appearanceDesignNum");

                    b.Property<string>("blPath")
                        .HasMaxLength(500);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("customerId");

                    b.Property<string>("demandNo")
                        .HasMaxLength(12);

                    b.Property<int?>("inventionNum");

                    b.Property<string>("otherPath")
                        .HasMaxLength(500);

                    b.Property<int?>("ownerId");

                    b.Property<DateTime>("planSubmitDate");

                    b.Property<string>("proxyPath")
                        .HasMaxLength(500);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("remissionPath")
                        .HasMaxLength(500);

                    b.Property<int?>("softRightNum");

                    b.Property<int>("techId");

                    b.Property<int>("total");

                    b.Property<int>("type");

                    b.Property<int?>("utilityNum");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("patent_demand");
                });

            modelBuilder.Entity("MSDB.Models.patent_demand_member", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("deamndId");

                    b.Property<int>("mType");

                    b.Property<int>("memberId");

                    b.HasKey("id");

                    b.ToTable("patent_demand_member");
                });

            modelBuilder.Entity("MSDB.Models.patent_master", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address")
                        .HasMaxLength(200);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("linkEmail")
                        .HasMaxLength(50);

                    b.Property<string>("linkTel")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("masterName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.ToTable("patent_master");
                });

            modelBuilder.Entity("MSDB.Models.patent_plan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address")
                        .HasMaxLength(200);

                    b.Property<string>("applicant")
                        .HasMaxLength(200);

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("confirmName")
                        .HasMaxLength(200);

                    b.Property<int?>("confirmType");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("customerId");

                    b.Property<DateTime?>("demandDate");

                    b.Property<int?>("demandId");

                    b.Property<int>("engineerId");

                    b.Property<string>("firstInventor")
                        .HasMaxLength(200);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("linkMan")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("linkTel")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("masterId");

                    b.Property<string>("otherInventor")
                        .HasMaxLength(300);

                    b.Property<string>("otherItem")
                        .HasMaxLength(10);

                    b.Property<int?>("ownerId");

                    b.Property<string>("patentName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("patentNo")
                        .HasMaxLength(50);

                    b.Property<int>("patentType");

                    b.Property<int>("planType");

                    b.Property<string>("postalCode")
                        .HasMaxLength(10);

                    b.Property<int>("process");

                    b.Property<int>("projectId");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("submitDate");

                    b.Property<int>("unitType");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("patent_plan");
                });

            modelBuilder.Entity("MSDB.Models.patent_plan_info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal?>("acceptFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("acceptFeeDate");

                    b.Property<DateTime?>("acceptNoticeDate");

                    b.Property<DateTime?>("authDate");

                    b.Property<decimal?>("authFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("authFeeDate");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime?>("issueDate");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("patentPlanId");

                    b.Property<DateTime?>("submittedDate");

                    b.HasKey("id");

                    b.HasIndex("patentPlanId")
                        .IsUnique();

                    b.ToTable("patent_plan_info");
                });

            modelBuilder.Entity("MSDB.Models.patent_plan_process", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("patentPlanId");

                    b.Property<int>("process");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.ToTable("patent_plan_process");
                });

            modelBuilder.Entity("MSDB.Models.patent_sea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("applyDateTime");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("demandId");

                    b.Property<string>("filePath")
                        .HasMaxLength(1000);

                    b.Property<string>("inventor")
                        .HasMaxLength(200);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int?>("mainType");

                    b.Property<string>("patentName")
                        .HasMaxLength(200);

                    b.Property<string>("patentNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("patent_sea");
                });

            modelBuilder.Entity("MSDB.Models.policyContent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("contentUrl")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("createTime");

                    b.Property<DateTime>("issueDate");

                    b.Property<int>("sourceId");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("policyContent");
                });

            modelBuilder.Entity("MSDB.Models.policySource", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("addressCode")
                        .HasMaxLength(30);

                    b.Property<string>("cookies")
                        .HasMaxLength(300);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("dataContent")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasDefaultValue("RE");

                    b.Property<string>("dataParse")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasDefaultValue("RE");

                    b.Property<string>("dateFormat")
                        .HasMaxLength(20);

                    b.Property<string>("dateParse")
                        .HasMaxLength(100);

                    b.Property<bool>("disabled");

                    b.Property<string>("domain")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("errCnt");

                    b.Property<string>("formData")
                        .HasMaxLength(300);

                    b.Property<string>("formType")
                        .HasMaxLength(30);

                    b.Property<string>("jsonFormat")
                        .HasMaxLength(300);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("method")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasDefaultValue("GET");

                    b.Property<int>("pageMax")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(10);

                    b.Property<string>("pageParse")
                        .HasMaxLength(100);

                    b.Property<int>("pageType");

                    b.Property<string>("sname")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("stype")
                        .HasMaxLength(50);

                    b.Property<string>("titleParse")
                        .HasMaxLength(100);

                    b.Property<string>("typeUrl")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("url")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("urlBase")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("policySource");
                });

            modelBuilder.Entity("MSDB.Models.policySourceUser", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("sourceId");

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.ToTable("policySourceUser");
                });

            modelBuilder.Entity("MSDB.Models.product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address")
                        .HasMaxLength(100);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("declareType");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("productType");

                    b.Property<bool>("shouldRegister");

                    b.Property<int?>("year");

                    b.HasKey("id");

                    b.ToTable("product");
                });

            modelBuilder.Entity("MSDB.Models.product_stage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("order");

                    b.Property<int>("productId");

                    b.Property<string>("stageKey")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("id");

                    b.ToTable("product_stage");
                });

            modelBuilder.Entity("MSDB.Models.project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("businessId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("customerId");

                    b.Property<int>("deptId");

                    b.Property<int?>("lastLogId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("owerId");

                    b.Property<int>("productId");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("project");
                });

            modelBuilder.Entity("MSDB.Models.project_audit_summary", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("auditType");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("customerId");

                    b.Property<int>("doneCnt");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("modeType");

                    b.Property<int>("ongoingCnt");

                    b.Property<int?>("projectId");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("project_audit_summary");
                });

            modelBuilder.Entity("MSDB.Models.project_basic", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("applyStatus");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("financeStaff")
                        .HasMaxLength(200);

                    b.Property<bool?>("hasPayPatent");

                    b.Property<decimal?>("income")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("incomeTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("isImplemented");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("manager")
                        .HasMaxLength(200);

                    b.Property<string>("other")
                        .HasMaxLength(200);

                    b.Property<int>("projectId");

                    b.Property<decimal?>("researchFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("startTime");

                    b.Property<decimal?>("taxRefiefs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("techStaff")
                        .HasMaxLength(200);

                    b.Property<int?>("totalStaff");

                    b.HasKey("id");

                    b.ToTable("project_basic");
                });

            modelBuilder.Entity("MSDB.Models.project_finance_info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime?>("dockingTime");

                    b.Property<decimal?>("estimateRdAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("projectId");

                    b.HasKey("id");

                    b.ToTable("project_finance_info");
                });

            modelBuilder.Entity("MSDB.Models.project_member", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("customerId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("mType");

                    b.Property<int>("memberId");

                    b.Property<int>("projectId");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.HasIndex("projectId", "mType", "memberId")
                        .IsUnique();

                    b.ToTable("project_member");
                });

            modelBuilder.Entity("MSDB.Models.project_member_log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("customerId");

                    b.Property<int>("mType");

                    b.Property<int>("memberId");

                    b.Property<int>("operationId");

                    b.Property<DateTime>("operationTime");

                    b.Property<int>("projectId");

                    b.HasKey("id");

                    b.ToTable("project_member_log");
                });

            modelBuilder.Entity("MSDB.Models.project_progress_detail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("operationTime");

                    b.Property<string>("result")
                        .HasMaxLength(100);

                    b.Property<int>("stage");

                    b.Property<DateTime>("updateTime");

                    b.Property<int>("userId");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.HasIndex("companyId", "stage", "year")
                        .IsUnique();

                    b.ToTable("project_progress_detail");
                });

            modelBuilder.Entity("MSDB.Models.project_register", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("beginDate");

                    b.Property<string>("changeContent")
                        .HasMaxLength(200);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("endDate");

                    b.Property<string>("filePath")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("finishDate");

                    b.Property<decimal>("investAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("originalPlace")
                        .HasMaxLength(200);

                    b.Property<int>("projectId");

                    b.Property<string>("registerFile")
                        .HasMaxLength(200);

                    b.Property<string>("registerName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("registerNo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("project_register");
                });

            modelBuilder.Entity("MSDB.Models.project_summary", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal?>("budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("cnt");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("customerId");

                    b.Property<int?>("docFileCount");

                    b.Property<int?>("employeeCount");

                    b.Property<int?>("equipmentCount");

                    b.Property<DateTime?>("operationTime");

                    b.Property<int?>("operationUserId");

                    b.Property<int>("projectId");

                    b.Property<int?>("rdCount");

                    b.Property<int?>("rdEmployeeCount");

                    b.Property<int?>("rdEquipmentCount");

                    b.Property<decimal?>("rdFunds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("updateTime");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.HasIndex("customerId", "projectId", "year")
                        .IsUnique();

                    b.ToTable("project_summary");
                });

            modelBuilder.Entity("MSDB.Models.project_summary_data", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("accountType");

                    b.Property<int?>("achievementCnt");

                    b.Property<decimal?>("budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("buildCnt");

                    b.Property<decimal?>("c10000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c10100")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c20000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c20100")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c20200")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c20300")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c20500")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c20600")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c20700")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c30000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c40000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c40200")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c50000")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("c69900")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("cnt");

                    b.Property<decimal?>("costAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("customerId");

                    b.Property<int?>("docFileCount");

                    b.Property<int?>("employeeAmount");

                    b.Property<int?>("employeeCount");

                    b.Property<int?>("employeeOpenidCnt");

                    b.Property<int?>("equipmentCount");

                    b.Property<int?>("finaMode");

                    b.Property<int?>("highTechCount");

                    b.Property<decimal?>("highTechIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("lastRdCnt");

                    b.Property<int?>("levelFileCnt");

                    b.Property<int?>("nextRdCnt");

                    b.Property<DateTime?>("operationTime");

                    b.Property<int?>("operationUserId");

                    b.Property<int?>("patentApplyCnt");

                    b.Property<int?>("patentCnt");

                    b.Property<int?>("proposalCnt");

                    b.Property<int?>("rdCount");

                    b.Property<int?>("rdEmployeeCount");

                    b.Property<int?>("rdEquipmentCount");

                    b.Property<int?>("rdFee");

                    b.Property<decimal?>("rdFunds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("reportCnt");

                    b.Property<decimal?>("revenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("revenueFcst");

                    b.Property<int?>("salesRdFee");

                    b.Property<decimal?>("totalIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("updateTime");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.HasIndex("customerId", "year")
                        .IsUnique();

                    b.ToTable("project_summary_data");
                });

            modelBuilder.Entity("MSDB.Models.project_tech_info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("content");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime?>("dockingTime");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<DateTime?>("startTime");

                    b.HasKey("id");

                    b.ToTable("project_tech_info");
                });

            modelBuilder.Entity("MSDB.Models.project_tech_log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("completedDate");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("feedback")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("labelKey")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("process")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("projectId");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("stageKey")
                        .HasMaxLength(10);

                    b.Property<int>("status");

                    b.Property<int>("techId");

                    b.HasKey("id");

                    b.ToTable("project_tech_log");
                });

            modelBuilder.Entity("MSDB.Models.project_tech_stage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("deadline");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("projectId");

                    b.Property<int>("stageId");

                    b.HasKey("id");

                    b.ToTable("project_tech_stage");
                });

            modelBuilder.Entity("MSDB.Models.project_timeline", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("beginTime");

                    b.Property<DateTime>("createTime");

                    b.Property<DateTime>("endTime");

                    b.Property<int>("itemType");

                    b.Property<int>("projectId");

                    b.Property<string>("result")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("updateTime");

                    b.HasKey("id");

                    b.ToTable("project_timeline");
                });

            modelBuilder.Entity("MSDB.Models.pushAudit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("instanceId");

                    b.Property<string>("msg")
                        .HasMaxLength(1000);

                    b.Property<int>("nodeId");

                    b.Property<string>("sendUserIds")
                        .HasMaxLength(600);

                    b.Property<int>("status");

                    b.HasKey("id");

                    b.ToTable("pushAudit");
                });

            modelBuilder.Entity("MSDB.Models.quality_score", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("auditTime");

                    b.Property<decimal>("avgScore")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("engineerId");

                    b.Property<bool>("isFinal");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<int?>("monthsId");

                    b.Property<decimal>("passRate")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int?>("rsProjectId");

                    b.Property<int>("scoreCount");

                    b.Property<DateTime>("submitTime");

                    b.Property<decimal>("totalScore")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("totalWeight")
                        .HasColumnType("decimal(5,3)");

                    b.Property<int>("type");

                    b.Property<decimal>("weight")
                        .HasColumnType("decimal(5,3)");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("quality_score");
                });

            modelBuilder.Entity("MSDB.Models.quality_score_log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("auditTime");

                    b.Property<decimal>("avgScore")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("engineerId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<DateTime>("month");

                    b.Property<bool>("passed");

                    b.Property<int>("qualityId");

                    b.Property<int>("scoreCount");

                    b.Property<string>("scores")
                        .HasMaxLength(500);

                    b.Property<DateTime>("submitTime");

                    b.Property<decimal>("totalScore")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("id");

                    b.ToTable("quality_score_log");
                });

            modelBuilder.Entity("MSDB.Models.quality_score_month", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("months")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("rsProjectId");

                    b.HasKey("id");

                    b.ToTable("quality_score_month");
                });

            modelBuilder.Entity("MSDB.Models.quality_type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("type");

                    b.Property<decimal>("weight")
                        .HasColumnType("decimal(5,3)");

                    b.HasKey("id");

                    b.ToTable("quality_type");
                });

            modelBuilder.Entity("MSDB.Models.rsProject_master", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("mType");

                    b.Property<int>("rsProjectId");

                    b.Property<int>("userId");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("rsProject_master");
                });

            modelBuilder.Entity("MSDB.Models.rsProject_summary", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("backupDataTotalCnt");

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<int?>("docDoneCnt");

                    b.Property<int?>("docSubmitCnt");

                    b.Property<int?>("docTotal");

                    b.Property<int?>("equipmentCnt");

                    b.Property<bool?>("hasNewReport");

                    b.Property<bool?>("hasReport");

                    b.Property<int?>("memberCnt");

                    b.Property<int?>("newReportStatus");

                    b.Property<int?>("patentCnt");

                    b.Property<string>("pname")
                        .HasMaxLength(200);

                    b.Property<string>("rdTitle")
                        .HasMaxLength(50);

                    b.Property<int?>("reportStatus");

                    b.Property<int>("rsProjectId");

                    b.Property<DateTime>("updateTime");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.HasIndex("companyId", "year", "rsProjectId")
                        .IsUnique();

                    b.ToTable("rsProject_summary");
                });

            modelBuilder.Entity("MSDB.Models.rsProject_uncollected", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyId");

                    b.Property<DateTime>("createTime");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<string>("pname")
                        .HasMaxLength(200);

                    b.Property<string>("rdTitle")
                        .HasMaxLength(50);

                    b.Property<int>("rsProjectId");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.HasIndex("companyId", "rsProjectId", "year")
                        .IsUnique();

                    b.ToTable("rsProject_uncollected");
                });

            modelBuilder.Entity("MSDB.Models.serviceLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("auditOpinion")
                        .HasMaxLength(500);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("customerAdvice")
                        .HasMaxLength(800);

                    b.Property<int>("customerId");

                    b.Property<string>("customerParticipan")
                        .HasMaxLength(100);

                    b.Property<int>("days");

                    b.Property<DateTime>("endDate");

                    b.Property<string>("filePath")
                        .HasMaxLength(500);

                    b.Property<string>("lastProblem")
                        .HasMaxLength(800);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("nowProblem")
                        .HasMaxLength(800);

                    b.Property<string>("serviceDept")
                        .HasMaxLength(100);

                    b.Property<int>("serviceType");

                    b.Property<DateTime>("startDate");

                    b.Property<int>("status");

                    b.Property<DateTime?>("submitDate");

                    b.Property<int>("totalStaff");

                    b.Property<decimal?>("totalTime")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("serviceLog");
                });

            modelBuilder.Entity("MSDB.Models.serviceUser", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("mType");

                    b.Property<int>("serviceId");

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.ToTable("serviceUser");
                });

            modelBuilder.Entity("MSDB.Models.service_apply", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("begin");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("customers")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("end");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int?>("ownerId");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("serviceNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("service_apply");
                });

            modelBuilder.Entity("MSDB.Models.service_apply_auditor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("finaDirectorId");

                    b.Property<int?>("finaManagerId");

                    b.Property<int?>("instanceId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("serviceApplyId");

                    b.Property<int?>("techDirectorId");

                    b.Property<int?>("techManagerId");

                    b.HasKey("id");

                    b.HasIndex("serviceApplyId")
                        .IsUnique();

                    b.ToTable("service_apply_auditor");
                });

            modelBuilder.Entity("MSDB.Models.service_apply_customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("causes")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("customerId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("serviceApplyId");

                    b.HasKey("id");

                    b.ToTable("service_apply_customer");
                });

            modelBuilder.Entity("MSDB.Models.service_apply_member", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("mtype");

                    b.Property<int>("serviceApplyId");

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.ToTable("service_apply_member");
                });

            modelBuilder.Entity("MSDB.Models.solution", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("customer")
                        .HasMaxLength(200);

                    b.Property<string>("description")
                        .HasMaxLength(1000);

                    b.Property<string>("filePath")
                        .HasMaxLength(1000);

                    b.Property<string>("industry")
                        .HasMaxLength(100);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("rate");

                    b.Property<DateTime?>("rateTime");

                    b.Property<int?>("rateUserId");

                    b.Property<string>("serveProject")
                        .HasMaxLength(200);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("solution");
                });

            modelBuilder.Entity("MSDB.Models.solution_share", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("dataId");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("solutionId");

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.HasIndex("solutionId", "type", "dataId")
                        .IsUnique();

                    b.ToTable("solution_share");
                });

            modelBuilder.Entity("MSDB.Models.sys_log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("logParams")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("logTime");

                    b.Property<int>("logType");

                    b.Property<string>("logUrl")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("requestIp")
                        .HasMaxLength(30);

                    b.Property<int>("userId");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("sys_log");
                });

            modelBuilder.Entity("MSDB.Models.sys_session", b =>
                {
                    b.Property<int>("userId");

                    b.Property<DateTime>("createTime");

                    b.Property<DateTime>("expireTime");

                    b.Property<string>("token")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updateTime");

                    b.HasKey("userId");

                    b.ToTable("sys_session");
                });

            modelBuilder.Entity("MSDB.Models.tech_summary", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("customerId");

                    b.Property<DateTime?>("operationTime");

                    b.Property<int?>("operationUserId");

                    b.Property<int>("projectId");

                    b.Property<int>("stageCount");

                    b.Property<DateTime>("updateTime");

                    b.Property<int>("uploadCount");

                    b.Property<int>("uploadedCount");

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.HasIndex("projectId")
                        .IsUnique();

                    b.ToTable("tech_summary");
                });

            modelBuilder.Entity("MSDB.Models.user_dept", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("depId");

                    b.Property<string>("dingUserId")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("isAdmin");

                    b.Property<string>("unionid")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.ToTable("user_dept");
                });

            modelBuilder.Entity("MSDB.Models.work_record", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("customerId");

                    b.Property<int>("deptId");

                    b.Property<int>("itemCnt");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int>("ownerId");

                    b.Property<string>("serviceNo")
                        .HasMaxLength(20);

                    b.Property<decimal>("totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("work_record");
                });

            modelBuilder.Entity("MSDB.Models.work_record_item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("begin");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("end");

                    b.Property<string>("itemType")
                        .HasMaxLength(10);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<int>("workRecordId");

                    b.HasKey("id");

                    b.ToTable("work_record_item");
                });

            modelBuilder.Entity("MSDB.Models.ys_dept", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("branchId");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("deptName");

                    b.Property<string>("fullPath")
                        .HasMaxLength(300);

                    b.Property<string>("fullname")
                        .HasMaxLength(300);

                    b.Property<string>("identity")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<int>("level");

                    b.Property<int>("parentId");

                    b.Property<string>("remark")
                        .HasMaxLength(300);

                    b.HasKey("id");

                    b.ToTable("ys_dept");
                });

            modelBuilder.Entity("MSDB.Models.ys_dept_manager", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("depId");

                    b.Property<string>("dingUserId")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("unionid")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("ys_dept_manager");
                });

            modelBuilder.Entity("MSDB.Models.ys_user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("avatar")
                        .HasMaxLength(20);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("depId");

                    b.Property<string>("dingUserId")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<byte>("gender");

                    b.Property<string>("mtypes")
                        .HasMaxLength(20);

                    b.Property<bool>("notSyndd");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("postion")
                        .HasMaxLength(20);

                    b.Property<bool>("reSetPassword");

                    b.Property<string>("realName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("remark")
                        .HasMaxLength(300);

                    b.Property<DateTime?>("rsLastOperationTime");

                    b.Property<byte>("status");

                    b.Property<string>("tel")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("token")
                        .HasMaxLength(50);

                    b.Property<string>("unionid")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("ys_user");
                });
#pragma warning restore 612, 618
        }
    }
}
