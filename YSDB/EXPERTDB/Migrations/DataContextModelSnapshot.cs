// <auto-generated />
using System;
using EXPERTDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EXPERTDB.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EXPERTDB.Models.app_menu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<string>("fullPath")
                        .HasMaxLength(300);

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<byte>("level");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("parentId");

                    b.Property<string>("perms")
                        .HasMaxLength(200);

                    b.Property<string>("remark")
                        .HasMaxLength(300);

                    b.Property<byte>("seq");

                    b.Property<byte>("status");

                    b.Property<byte>("type");

                    b.Property<string>("url")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("app_menu");
                });

            modelBuilder.Entity("EXPERTDB.Models.app_role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("remark")
                        .HasMaxLength(100);

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("app_role");
                });

            modelBuilder.Entity("EXPERTDB.Models.app_role_menu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("menuId");

                    b.Property<int>("roleId");

                    b.HasKey("id");

                    b.ToTable("app_role_menu");
                });

            modelBuilder.Entity("EXPERTDB.Models.app_user_role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("roleId");

                    b.Property<int>("userId");

                    b.HasKey("id");

                    b.ToTable("app_user_role");
                });

            modelBuilder.Entity("EXPERTDB.Models.e_award", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("aProject")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("awordName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("eUserId");

                    b.Property<DateTime>("grantDate");

                    b.Property<string>("grantDept")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("ranking")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("e_award");
                });

            modelBuilder.Entity("EXPERTDB.Models.e_bank_info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("accountName")
                        .HasMaxLength(50);

                    b.Property<string>("bankAccount")
                        .HasMaxLength(50);

                    b.Property<string>("bankName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("diplomaPath")
                        .HasMaxLength(100);

                    b.Property<int>("eUserId");

                    b.Property<string>("idBack")
                        .HasMaxLength(100);

                    b.Property<string>("idFront")
                        .HasMaxLength(100);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("otherGNVQsPath")
                        .HasMaxLength(100);

                    b.Property<string>("otherPath")
                        .HasMaxLength(200);

                    b.Property<string>("positionPath")
                        .HasMaxLength(100);

                    b.Property<string>("postCode")
                        .HasMaxLength(10);

                    b.Property<string>("remitAddress")
                        .HasMaxLength(200);

                    b.Property<string>("titlePath")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("e_bank_info");
                });

            modelBuilder.Entity("EXPERTDB.Models.e_book", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("author")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("authorOrder");

                    b.Property<string>("bookName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("bookType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("eUserId");

                    b.Property<DateTime>("issueDate");

                    b.Property<string>("issueUnit")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.HasKey("id");

                    b.ToTable("e_book");
                });

            modelBuilder.Entity("EXPERTDB.Models.e_extra", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("academicContent")
                        .HasMaxLength(200);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("eUserId");

                    b.Property<string>("highestReward")
                        .HasMaxLength(50);

                    b.Property<string>("homePage")
                        .HasMaxLength(100);

                    b.Property<string>("keyWord")
                        .HasMaxLength(200);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("overseaContent")
                        .HasMaxLength(200);

                    b.Property<bool>("overseaExp");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("socialAppointments")
                        .HasMaxLength(200);

                    b.Property<string>("specialBenefit")
                        .HasMaxLength(200);

                    b.Property<string>("workExp")
                        .HasMaxLength(200);

                    b.Property<string>("workResult")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.ToTable("e_extra");
                });

            modelBuilder.Entity("EXPERTDB.Models.e_intellectual_property", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("appNo")
                        .HasMaxLength(30);

                    b.Property<string>("authNo")
                        .HasMaxLength(30);

                    b.Property<string>("certificateNo")
                        .HasMaxLength(30);

                    b.Property<int>("country");

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int>("eUserId");

                    b.Property<string>("issueUnit")
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<int?>("patentType");

                    b.Property<string>("pname")
                        .HasMaxLength(100);

                    b.Property<bool>("transform");

                    b.Property<int>("type");

                    b.HasKey("id");

                    b.ToTable("e_intellectual_property");
                });

            modelBuilder.Entity("EXPERTDB.Models.e_paper", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<string>("dataIncluded")
                        .HasMaxLength(100);

                    b.Property<int>("eUserId");

                    b.Property<string>("heading")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("includedCnt");

                    b.Property<DateTime>("issueDate");

                    b.Property<string>("journalName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.HasKey("id");

                    b.ToTable("e_paper");
                });

            modelBuilder.Entity("EXPERTDB.Models.e_user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("birthday");

                    b.Property<DateTime>("createTime");

                    b.Property<bool>("disabled");

                    b.Property<int>("eType");

                    b.Property<string>("email")
                        .HasMaxLength(50);

                    b.Property<int>("gender");

                    b.Property<string>("idNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("idType");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<string>("logoPath")
                        .HasMaxLength(100);

                    b.Property<string>("mobilePhone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("realName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("e_user");
                });

            modelBuilder.Entity("EXPERTDB.Models.e_user_info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("booming")
                        .HasMaxLength(50);

                    b.Property<DateTime>("createTime");

                    b.Property<int>("creatorId");

                    b.Property<int?>("degree");

                    b.Property<string>("degreeSchool")
                        .HasMaxLength(50);

                    b.Property<string>("deptName")
                        .HasMaxLength(50);

                    b.Property<string>("doctorLevel")
                        .HasMaxLength(50);

                    b.Property<int>("eUserId");

                    b.Property<int?>("eduLevel");

                    b.Property<string>("fax")
                        .HasMaxLength(50);

                    b.Property<string>("firstSubject")
                        .HasMaxLength(50);

                    b.Property<string>("govReviewName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("graduatedDate");

                    b.Property<string>("graduatedSchool")
                        .HasMaxLength(50);

                    b.Property<string>("homeTel")
                        .HasMaxLength(20);

                    b.Property<string>("industryType")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<bool>("isGovReview");

                    b.Property<DateTime>("lastUpdateTime");

                    b.Property<int>("lastUpdatorId");

                    b.Property<string>("major")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("nation")
                        .HasMaxLength(10);

                    b.Property<string>("officeTel")
                        .HasMaxLength(20);

                    b.Property<string>("other")
                        .HasMaxLength(2000);

                    b.Property<string>("otherNVQ")
                        .HasMaxLength(100);

                    b.Property<string>("position")
                        .HasMaxLength(50);

                    b.Property<string>("postCode")
                        .HasMaxLength(10);

                    b.Property<string>("secondSubject")
                        .HasMaxLength(50);

                    b.Property<string>("thirdSubject")
                        .HasMaxLength(50);

                    b.Property<string>("tradition")
                        .HasMaxLength(50);

                    b.Property<string>("unitName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("unitType");

                    b.Property<string>("workCity")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("workType")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("e_user_info");
                });

            modelBuilder.Entity("EXPERTDB.Models.sys_log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("logParams")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("logTime");

                    b.Property<int>("logType");

                    b.Property<string>("logUrl")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("requestIp")
                        .HasMaxLength(30);

                    b.Property<int>("userId");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("sys_log");
                });
#pragma warning restore 612, 618
        }
    }
}
